<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xcad="http://schemas.xceed.com/wpf/xaml/avalondock"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:local="clr-namespace:DAR"
        xmlns:Custom="http://schemas.microsoft.com/winfx/2006/xaml/presentation/ribbon"
        xmlns:Fluent="urn:fluent-ribbon"
    xmlns:wpf="http://schemas.microsoft.com/netfx/2009/xaml/presentation" x:Class="DAR.MainWindow"
        mc:Ignorable="d"
        Title="EQ Audio Triggers" Height="812" Width="1170" Icon="Images/Tonev-Windows-7-Windows-7-headphone.ico" WindowStyle="ThreeDBorderWindow" SizeChanged="Window_SizeChanged" Closing="Window_Closing">
    <Window.Resources>
        <ResourceDictionary>
            <local:MonitoringStatusConverter x:Key="converter" />
            <local:FileStatusConverter x:Key="fileconverter"/>
            <local:RadioOverride x:Key="radioconverter"/>
            <local:BorderConverter x:Key="borderconverter"/>
            <local:DefaultCategoryConverter x:Key="defaultcategoryconverter"/>
            <local:PushbackConverter x:Key="pushbackconverter" />

            <Style x:Key="TreeViewItemStyle" TargetType="TreeViewItem">
                <Setter Property="IsExpanded" Value="True" />
                <Setter Property="IsSelected" Value="{Binding IsInitiallySelected, Mode=OneTime}" />
                <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True" />
            </Style>
            <HierarchicalDataTemplate x:Key="CheckBoxItemTemplate" ItemsSource="{Binding Children, Mode=OneTime}">
                <StackPanel Orientation="Horizontal">
                    <CheckBox Focusable="True" IsChecked="{Binding IsChecked}" VerticalAlignment="Center" />
                    <ContentPresenter Content="{Binding Name, Mode=OneTime}" Margin="2,0" />
                </StackPanel>
            </HierarchicalDataTemplate>
            <Style x:Key="profileexpander" TargetType="Expander">
                <Setter Property="Background" Value="Lavender"/>
                <Setter Property="ExpandDirection" Value="Down"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="IsExpanded" Value="False"/>
            </Style>
            <Style x:Key="overrideexpander" TargetType="Expander">
                <Setter Property="Background" Value="Azure"/>
                <Setter Property="ExpandDirection" Value="Down"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="IsExpanded" Value="False"/>
                <Setter Property="Margin" Value="20,0,0,0"/>
            </Style>
            <CollectionViewSource x:Key="categorysource" Source="{Binding CategoryList}"/>
            <CollectionViewSource x:Key="overlaytextsource" Source="{Binding OverlayTexts}"/>
            <CollectionViewSource x:Key="overlaytimersource" Source="{Binding OverlayTimers}"/>
            <CompositeCollection x:Key="categorycollection">
                <CollectionContainer Collection="{Binding Source={StaticResource categorysource}}"/>
                <CollectionContainer Collection="{Binding Source={StaticResource overlaytextsource}}"/>
                <CollectionContainer Collection="{Binding Source={StaticResource overlaytimersource}}"/>
            </CompositeCollection>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Fluent:Ribbon Name="ribbonMain" Grid.Row="0" SelectedTabChanged="RibbonMain_SelectionChanged">
            <!--Backstage-->
            <Fluent:Ribbon.Menu>
                <Fluent:Backstage>
                    <Fluent:BackstageTabControl>
                        <Fluent:Button Header="Settings" Click="Settings_Click"/>
                        <Fluent:Button Header="Update Program"/>
                        <Fluent:Button Header="Update Pushback List" Click="UpdatePushback_Click"/>
                        <Fluent:BackstageTabItem Header="About">
                            <StackPanel>
                                <Grid Margin="10,0,10,0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Image Grid.Row="1" Grid.Column="0" Source="Images\Tonev-Windows-7-Windows-7-headphone.ico"/>
                                    <TextBlock Grid.Row="0" Grid.Column="1" HorizontalAlignment="Center" Text="EQ Audio Triggers" FontSize="30" FontFamily="Segoe UI" Foreground="Black"/>
                                    <StackPanel VerticalAlignment="Center" Grid.Row="1" Grid.Column="1">
                                        <TextBlock VerticalAlignment="Center"  Name="textblockVersion" HorizontalAlignment="Center" FontSize="30" FontFamily="Segoe UI" Foreground="Black"/>
                                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="Segoe UI" FontSize="15" Text="Dhurgan(Luclin)" Foreground="Black"/>
                                    </StackPanel>
                                </Grid>
                            </StackPanel>
                        </Fluent:BackstageTabItem>
                        <Fluent:Button Header="Exit" Click="ButtonExit_Click"/>
                    </Fluent:BackstageTabControl>
                </Fluent:Backstage>
            </Fluent:Ribbon.Menu>
            <!--Tabs-->
            <Fluent:RibbonTabItem Name="tabhome" Header="Home">
                <Fluent:RibbonGroupBox Header="Characters">
                    <Fluent:Button Name="ribbonCharAdd" Header="Add" IsEnabled="True" Click="RibbonButtonAdd_Click" LargeIcon="Images/Oxygen-Icons.org-Oxygen-Actions-list-add-user.ico"/>
                    <Fluent:Button Name="ribbonCharEdit" Header="Edit" IsEnabled="False" Click="RibbonButtonEdit_Click" Size="Middle" Icon="Images/Oxygen-Icons.org-Oxygen-Actions-user-properties.ico"/>
                    <Fluent:Button Name="ribbonCharRemove" Header="Remove" IsEnabled="False" Click="RibbonButtonRemove_Click" Size="Middle" Icon="Images/Oxygen-Icons.org-Oxygen-Actions-list-remove-user.ico"/>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="Trigger Groups">
                    <Fluent:SplitButton Name="triggerGroupsAdd" Click="TriggerGroupsAdd_Click" Header="Add" LargeIcon="Images/Oxygen-Icons.org-Oxygen-Actions-tab-new-background.ico">
                        <Fluent:Button Name="triggerGroupsAddTopLevel" Click="TriggerGroupsAddTopLevel_Click" Size="Middle" Header="Add Top Level Group" Icon="Images/Oxygen-Icons.org-Oxygen-Actions-list-add.ico"/>
                        <Fluent:Button Name="triggerGroupsAddSelected" Click="TriggerGroupsAddSelected_Click" Size="Middle" IsEnabled="False" Header="Add To Selected Group" Icon="Images/Oxygen-Icons.org-Oxygen-Actions-list-add.ico"/>                        
                    </Fluent:SplitButton>
                    <Fluent:Button Name="triggerGroupsEdit" Click="TriggerGroupsEdit_Click" IsEnabled="False" Header="Edit" Size="Middle" Icon="Images/Oxygen-Icons.org-Oxygen-Actions-draw-freehand.ico"/>
                    <Fluent:Button Name="triggerGroupsRemove" Click="TriggerGroupsRemove_Click" IsEnabled="False" Header="Remove" Size="Middle" Icon="Images/Oxygen-Icons.org-Oxygen-Actions-tab-close-other.ico"/>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="Triggers">
                    <Fluent:Button Name="triggerAdd" IsEnabled="False" Header="Add" Click="TriggerAdd_Click" LargeIcon="Images/Oxygen-Icons.org-Oxygen-Actions-document-new.ico"/>
                    <Fluent:Button Name="triggerEdit" IsEnabled="False" Header="Edit" Click="TriggerEdit_Click" Size="Middle" Icon="Images/Oxygen-Icons.org-Oxygen-Actions-document-edit.ico"/>
                    <Fluent:Button Name="triggerRemove" IsEnabled="False" Header="Remove" Click="TriggerRemove_Click" Size="Middle" Icon="Images/Oxygen-Icons.org-Oxygen-Actions-document-close.ico"/>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="Misc">
                    <Fluent:SplitButton Header="Commands" LargeIcon="Images/Oxygen-Icons.org-Oxygen-Apps-utilities-terminal.ico">
                        <Fluent:SplitButton HorizontalAlignment="Right" Name="rbnStopAlerts" Size="Middle" Icon="Images/Oxygen-Icons.org-Oxygen-Actions-process-stop.ico" Header="Reset Timers" Click="RbnStopAlerts_Click"/>
                        <Fluent:SplitButton HorizontalAlignment="Right" Name="rbnResetCounters" Size="Middle" Icon="Images/Oxygen-Icons.org-Oxygen-Actions-edit-undo.ico" Header="Reset Counters"/>
                    </Fluent:SplitButton>
                    <Fluent:Button Header="Pronunciations" LargeIcon="Images/Oxygen-Icons.org-Oxygen-Apps-konversation.ico"/>
                    <Fluent:SplitButton Header="Search" Click="LogfileSearch_Click" LargeIcon="Images/Oxygen-Icons.org-Oxygen-Actions-edit-find.ico">
                        <Fluent:Button Header="Log File" Size="Middle" Click="LogfileSearch_Click"/>
                        <Fluent:Button Header="Triggers" Size="Middle"/>
                    </Fluent:SplitButton>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="Pushback Monitor" Width="115">
                    <StackPanel>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="40"/>
                            </Grid.ColumnDefinitions>
                            <Fluent:Button Grid.Row="0" Grid.Column="0" HorizontalAlignment="Center" Name="fluentbutton_pushbacktoggle" IsEnabled="True" Header="Monitor" Click="Button_pushbacktoggle_Click" LargeIcon="Images/Icons8-Windows-8-Hands-Clenched-Fist.ico"/>
                            <Image Name="image_pushbackindicator" Margin="5,0,0,0" Grid.Row="0" Grid.Column="1" Source="{Binding Converter={StaticResource pushbackconverter}}"/>
                        </Grid>
                    </StackPanel>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
            <Fluent:RibbonTabItem Name="tabsharing" Header="Sharing">
                <Fluent:RibbonGroupBox Header="Library">
                    <Fluent:Button Header="Online Library" LargeIcon="Images/Itzikgur-My-Seven-Books-1.ico"/>
                    <Fluent:SplitButton Header="Share" LargeIcon="Images/Oxygen-Icons.org-Oxygen-Apps-preferences-system-network-sharing.ico">
                        <Fluent:Button Size="Middle" Header="Quick Share"/>
                        <Fluent:Button Size="Middle" Header="Submit to Library"/>
                    </Fluent:SplitButton>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="Share">
                    <Fluent:SplitButton Header="Import" LargeIcon="Images/Oxygen-Icons.org-Oxygen-Actions-svn-update.ico">
                        <Fluent:Button Size="Middle" Header="From Everquest"/>
                        <Fluent:Button Size="Middle" Header="From GINA" Click="ImportFromGINA_Click"/>
                    </Fluent:SplitButton>
                    <Fluent:SplitButton Header="Export" LargeIcon="Images/Oxygen-Icons.org-Oxygen-Actions-svn-commit.ico">
                        <Fluent:Button Size="Middle" Header="To Package"/>
                        <Fluent:Button Size="Middle" Header="To Everquest"/>
                    </Fluent:SplitButton>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
            <Fluent:RibbonTabItem Name="taboverlays" Header="Overlays">
                <Fluent:RibbonGroupBox Name="ribbongroupTextOverlays" Header="Text Overlays">
                    <Fluent:Button Header="Add" Click="TextOverlayAddRibbonButton_Click" LargeIcon="Images/Oxygen-Icons.org-Oxygen-Actions-document-new.ico"/>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Name="ribbongroupTimerOverlays" Header="Timer Overlays">
                    <Fluent:Button Header="Add" Click="TimerOverlayAddRibbonButton_Click" LargeIcon="Images/Google-Noto-Emoji-Travel-Places-42608-stopwatch.ico"/>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
            <Fluent:RibbonTabItem Name="tabcategories" Header="Categories">
                <Fluent:RibbonGroupBox Header="Actions">
                    <Fluent:Button Click="CategoryAdd_Click" Header="Add" LargeIcon="Images/Oxygen-Icons.org-Oxygen-Actions-document-new.ico"/>
                    <Fluent:Button Click="CategoryRemove_Click" Header="Remove" LargeIcon="Images/Oxygen-Icons.org-Oxygen-Actions-document-close.ico"/>
                    <Fluent:Button Name="button_CategorySetDefault" Click="CategoryDefault_Click" Header="Set As Default" LargeIcon="Images/Oxygen-Icons.org-Oxygen-Actions-dialog-ok-apply.ico"/>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
            <Fluent:RibbonTabItem Name="tabfiltering" Header="Filtering">
                <Fluent:RibbonGroupBox Header="Activated Triggers Filter by Trigger">
                    <Fluent:TextBox Margin="0,20,0,0" Width="200" Name="textboxTriggerSearch" Header="Search: " TextChanged="TextboxTriggerSearch_TextChanged"/>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="Pushback Filter by Spell">
                    <Fluent:TextBox Margin="0,20,0,0" Width="200" Name="textboxPushbackSearch" Header="Search: " TextChanged="TextboxPushbackSearch_TextChanged"/>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
        </Fluent:Ribbon>

        <xcad:DockingManager 
                           AllowMixedOrientation="True"
                           BorderBrush="Black"
                           BorderThickness="5" Margin="0,137,0,0" Grid.RowSpan="2">
            <xcad:DockingManager.Theme>
                <xcad:VS2010Theme />
            </xcad:DockingManager.Theme>

            <xcad:LayoutRoot x:Name="_layoutRoot">
                <xcad:LayoutPanel>
                    <xcad:LayoutAnchorablePaneGroup DockWidth="200">
                        <xcad:LayoutAnchorablePane Name="characterpane">
                            <xcad:LayoutAnchorable x:Name="characters" Title="Characters" ContentId="charactersPane" CanHide="False">
                                <ListView ContextMenuOpening="ListviewCharacters_ContextMenuOpening" MouseDoubleClick="ListviewCharacters_MouseDoubleClick" SelectionChanged="ListviewCharacters_SelectionChanged" x:Name="listviewCharacters" IsSynchronizedWithCurrentItem="True">
                                    <ListView.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="Edit Character" Click="MenuItemCharEdit_Click">
                                                <MenuItem.Icon>
                                                    <Image Height="20" Source="Images\Oxygen-Icons.org-Oxygen-Actions-draw-freehand.ico"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="Delete Character" Click="MenuItemCharDelete_Click">
                                                <MenuItem.Icon>
                                                    <Image Height="20" Source="Images\Oxygen-Icons.org-Oxygen-Actions-edit-delete.ico"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <Separator/>
                                            <MenuItem Name="cmStartMonitor" Header="Start Monitoring" Click="MenuItemStartMonitor_Click">
                                                <MenuItem.Icon>
                                                    <Image Height="20" Source="Images\Oxygen-Icons.org-Oxygen-Actions-media-playback-start.ico"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Name="cmStopMonitor" Header="Stop Monitoring" Click="MenuItemStopMonitor_Click">
                                                <MenuItem.Icon>
                                                    <Image Height="20" Source="Images\Oxygen-Icons.org-Oxygen-Actions-media-playback-stop.ico"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                        </ContextMenu>
                                    </ListView.ContextMenu>
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <WrapPanel>
                                                <Border CornerRadius="4,4,4,4" BorderThickness="2" BorderBrush="{Binding FileExists, Converter={StaticResource borderconverter}}">
                                                    <Border.Background>
                                                        <LinearGradientBrush EndPoint="0.504,1.5" StartPoint="0.504,0.03">
                                                            <GradientStop Color="{Binding FileExists, Converter={StaticResource borderconverter}}" Offset="0"/>
                                                            <GradientStop Color="Transparent" Offset="0.567"/>
                                                        </LinearGradientBrush>
                                                    </Border.Background>
                                                <Grid>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition />
                                                    </Grid.RowDefinitions>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="25"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="25"/>
                                                    </Grid.ColumnDefinitions>                                                    
                                                    <Image HorizontalAlignment="Left" Grid.Row="0" Grid.Column="0" Source="{Binding Monitor, Converter={StaticResource converter}}" />
                                                    <TextBlock Margin="5,0,15,0" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Row="0" Grid.Column="1" Text="{Binding ProfileName}" />
                                                    <Image HorizontalAlignment="Right" Margin="0,0,0,0" Grid.Row="0" Grid.Column="2" Source="{Binding FileExists, Converter={StaticResource fileconverter}}"/>
                                                </Grid>
                                                </Border>
                                            </WrapPanel>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                            </xcad:LayoutAnchorable>
                        </xcad:LayoutAnchorablePane>
                    </xcad:LayoutAnchorablePaneGroup>
                    <xcad:LayoutDocumentPane>
                        <xcad:LayoutDocument x:Name="availabletriggers" CanClose="False" Title="Triggers" ContentId="triggersPane" IsSelectedChanged="Availabletriggers_IsSelectedChanged">
                            <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TreeView x:Name="treeViewTriggers"
                                        AllowDrop="True" 
                                        BorderBrush="Black" BorderThickness="1" 
                                        Grid.Row="0" Grid.Column="0" Margin="12,12,0,0"
                                        ContextMenuOpening="TreeViewTriggers_ContextMenuOpening" 
                                        SelectedItemChanged="TreeViewTriggers_SelectedItemChanged" 
                                        HorizontalAlignment="Left" VerticalAlignment="Top"   
                                        ItemContainerStyle="{StaticResource TreeViewItemStyle}"
                                        ItemTemplate="{StaticResource CheckBoxItemTemplate}" 
                                              DragEnter="TreeViewTriggers_DragEnter"
                                              Drop="TreeViewTriggers_Drop">
                                        <TreeView.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Name="cmTreeCopy" Header="Copy" Click="MenuItemTriggerCopy_Click">
                                                    <MenuItem.Icon>
                                                        <Image Height="20" Source="Images\Oxygen-Icons.org-Oxygen-Actions-edit-copy.ico"/>
                                                    </MenuItem.Icon>
                                                </MenuItem>
                                                <MenuItem Name="cmTreeEdit" Header="Edit" Click="MenuItemTriggerEdit_Click">
                                                    <MenuItem.Icon>
                                                        <Image Height="20" Source="Images\Oxygen-Icons.org-Oxygen-Actions-document-edit.ico"/>
                                                    </MenuItem.Icon>
                                                </MenuItem>
                                                <MenuItem Name="cmTreePaste" Header="Paste" Click="MenuItemTriggerPaste_Click">
                                                    <MenuItem.Icon>
                                                        <Image Height="20" Source="Images\Oxygen-Icons.org-Oxygen-Actions-edit-paste.ico"/>
                                                    </MenuItem.Icon>
                                                </MenuItem>
                                                <Separator/>
                                                <MenuItem Name="cmTreeDelete" Header="Delete" Click="MenuItemTriggerDelete_Click">
                                                    <MenuItem.Icon>
                                                        <Image Height="20" Source="Images\Oxygen-Icons.org-Oxygen-Actions-edit-delete.ico"/>
                                                    </MenuItem.Icon>
                                                </MenuItem>
                                            </ContextMenu>
                                        </TreeView.ContextMenu>
                                    </TreeView>
                                    <TreeView 
                                        x:Name="treemerge"
                                        Margin="12,12,0,0" 
                                        Grid.Row="0" Grid.Column="1"                                         
                                        HorizontalAlignment="Left" VerticalAlignment="Top" 
                                        ItemContainerStyle="{StaticResource TreeViewItemStyle}" 
                                        ItemTemplate="{StaticResource CheckBoxItemTemplate}" 
                                        Visibility="Hidden" BorderBrush="Black" BorderThickness="1"
                                        PreviewMouseLeftButtonDown="Treemerge_PreviewMouseLeftButtonDown"
                                        PreviewMouseMove="Treemerge_PreviewMouseMove"/>
                                </Grid>
                            </ScrollViewer>
                        </xcad:LayoutDocument>
                        <xcad:LayoutDocument x:Name="firedtriggerspane" Title="Activated Triggers" ContentId="activatedPane">
                            <DataGrid Grid.Row="0" Grid.Column="0" Name="datagrid_activated" AutoGenerateColumns="False" CanUserAddRows="False">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Trigger Name" Binding="{Binding Name}"  IsReadOnly="True"/>
                                    <DataGridTextColumn Header="From Log" Binding="{Binding FromLog}" IsReadOnly="True"/>
                                    <DataGridTextColumn Header="Triggred At" Binding="{Binding TriggerTime}" IsReadOnly="True"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </xcad:LayoutDocument>
                        <xcad:LayoutDocument x:Name="pushbackpane" Title="Pushback Monitor" ContentId="pushbackPane">
                            <DataGrid Name="datagrid_pushback" AutoGenerateColumns="False" CanUserAddRows="False">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Character" Binding="{Binding Character}"  IsReadOnly="True"/>
                                    <DataGridTextColumn Header="Spell" Binding="{Binding Spell}" IsReadOnly="True"/>
                                    <DataGridTextColumn Header="Push Type" Binding="{Binding PushType}" IsReadOnly="True"/>
                                    <DataGridTextColumn Header="Distance" Binding="{Binding Distance}" IsReadOnly="True"/>
                                    <DataGridTextColumn Header="From Log" Binding="{Binding FromCharacter}" IsReadOnly="True"/>
                                    <DataGridTextColumn Header="Triggered At" Binding="{Binding TriggerTime}" IsReadOnly="True"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </xcad:LayoutDocument>
                        <xcad:LayoutDocument  x:Name="categoriesDocument" Title="Categories" ContentId="categoriesPane" IsEnabled="True" CanClose="False" IsSelectedChanged="Categories_IsSelectedChanged">
                            <ScrollViewer VerticalScrollBarVisibility="Auto">
                                <TabControl Name="tabcontrolCategory" TabStripPlacement="Left" SelectionChanged="TabcontrolCategory_SelectionChanged" ItemsSource="{Binding}">
                                    <TabControl.ItemTemplate>
                                        <DataTemplate>
                                            <ContentControl Content="{Binding}">
                                                <ContentControl.Resources>
                                                    <DataTemplate DataType="{x:Type local:CategoryWrapper}">
                                                        <StackPanel>
                                                            <Grid>
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="15" />
                                                                </Grid.RowDefinitions>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                    <ColumnDefinition Width="35"/>
                                                                </Grid.ColumnDefinitions>
                                                                <TextBlock Grid.Row="0" Grid.Column="0" Text="{Binding CategoryItem.Name}"/>
                                                                <Image Grid.Row="0" Grid.Column="1" Source="{Binding CategoryItem.DefaultCategory, Converter={StaticResource defaultcategoryconverter}}"/>
                                                            </Grid>
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </ContentControl.Resources>
                                            </ContentControl>
                                        </DataTemplate>
                                    </TabControl.ItemTemplate>
                                    <TabControl.ContentTemplate>
                                        <DataTemplate>
                                            <StackPanel>
                                                <GroupBox Margin="5,5,0,0" Name="groupboxSettings" Header="Category Settings">
                                                    <StackPanel>
                                                        <Grid>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="Auto" />
                                                            </Grid.RowDefinitions>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="75"/>
                                                                <ColumnDefinition Width="Auto"/>
                                                            </Grid.ColumnDefinitions>
                                                            <TextBlock Margin="10,0,10,0" HorizontalAlignment="Right" Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" Text="Name"/>
                                                            <TextBox Text="{Binding CategoryItem.Name}" Grid.Row="0" Grid.Column="1" Name="categoryName" Width="300" Height="25" LostFocus="CategoryName_LostFocus" TextChanged="CategoryName_TextChanged"/>
                                                        </Grid>
                                                        <Line Margin="0,8" SnapsToDevicePixels="True" Stroke="{Binding ElementName=groupboxSettings,Path=BorderBrush}" Stretch="Fill" X1="0" X2="1"/>
                                                        <Grid>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="Auto" />
                                                                <RowDefinition Height="Auto"/>
                                                                <RowDefinition Height="Auto"/>
                                                                <RowDefinition Height="Auto"/>
                                                            </Grid.RowDefinitions>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="75"/>
                                                                <ColumnDefinition Width="Auto"/>
                                                                <ColumnDefinition Width="Auto"/>
                                                                <ColumnDefinition Width="Auto"/>
                                                            </Grid.ColumnDefinitions>
                                                            <TextBlock HorizontalAlignment="Right" Grid.Row="0" Grid.Column="0" Margin="10,0,10,0" VerticalAlignment="Center" Text="Text"/>
                                                            <TextBlock Grid.Row="0" Grid.Column="1" VerticalAlignment="Center" Text="Overlay:"/>
                                                            <ComboBox SelectedValuePath="Name" SelectedValue="{Binding CategoryItem.TextOverlay}" ItemsSource="{Binding OverlayTexts}" Margin="10,0,0,0" Grid.Row="0" Grid.Column="2" Width="100" Name="categoryTextOverlay" SelectionChanged="CategoryTextOverlay_SelectionChanged">
                                                                <ComboBox.ItemTemplate>
                                                                    <DataTemplate>
                                                                        <TextBlock Text="{Binding Name}"/>
                                                                    </DataTemplate>
                                                                </ComboBox.ItemTemplate>
                                                            </ComboBox>
                                                            <TextBlock Margin="0,10,0,0" Grid.Row="1" Grid.Column="1" Text="Colors:"/>
                                                            <RadioButton Margin="0,10,0,0" Grid.Row="1" Grid.Column="2" GroupName="textcolors" Content="Use Character Colors" IsChecked="{Binding CategoryItem.TextColors}" Checked="CategoryColor_Checked" Unchecked="CategoryColor_Unchecked"/>
                                                            <RadioButton Grid.Row="2" Grid.Column="2" GroupName="textcolors" Content="Use These Colors:" IsChecked="{Binding CategoryItem.TextThis}"  Checked="CategoryColorThis_Checked" Unchecked="CategoryColorThis_Unchecked" />
                                                            <TextBlock Grid.Row="2" Grid.Column="3" Text="Font:"/>
                                                            <xctk:ColorPicker Grid.Row="2" Grid.Column="4" Width="100" Name="clrpckrText" SelectedColor="{Binding CategoryItem.TextFontColor}" SelectedColorChanged="ClrpckrText_SelectedColorChanged"/>
                                                        </Grid>
                                                        <Line Margin="0,8" SnapsToDevicePixels="True" Stroke="{Binding ElementName=groupboxSettings,Path=BorderBrush}" Stretch="Fill" X1="0" X2="1"/>
                                                        <Grid>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="Auto" />
                                                                <RowDefinition Height="Auto"/>
                                                                <RowDefinition Height="Auto"/>
                                                            </Grid.RowDefinitions>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="75"/>
                                                                <ColumnDefinition Width="Auto"/>
                                                                <ColumnDefinition Width="Auto"/>
                                                                <ColumnDefinition Width="Auto"/>
                                                                <ColumnDefinition Width="Auto"/>
                                                                <ColumnDefinition Width="Auto"/>
                                                                <ColumnDefinition Width="Auto"/>
                                                            </Grid.ColumnDefinitions>
                                                            <TextBlock Margin="10,0,10,0" Grid.Row="0" Grid.Column="0" HorizontalAlignment="Right" Text="Timers"/>
                                                            <TextBlock Grid.Row="0" Grid.Column="1" Text="Overlay:"/>
                                                            <ComboBox SelectedValuePath="Name" SelectedValue="{Binding CategoryItem.TimerOverlay}" ItemsSource="{Binding OverlayTimers}" Margin="10,0,0,0" Grid.Row="0" Grid.Column="2" Width="100" Name="categoryTimerOverlay" SelectionChanged="CategoryTimerOverlay_SelectionChanged">
                                                                <ComboBox.ItemTemplate>
                                                                    <DataTemplate>
                                                                        <TextBlock Text="{Binding Name}"/>
                                                                    </DataTemplate>
                                                                </ComboBox.ItemTemplate>
                                                            </ComboBox>
                                                            <TextBlock Grid.Row="1" Grid.Column="1" Text="Colors:"/>
                                                            <RadioButton Grid.Row="1" Grid.Column="2" GroupName="timercolors" Content="Use Character Colors" IsChecked="{Binding CategoryItem.TimerColors}" Checked="TimerColors_Checked" Unchecked="TimerColors_Unchecked"/>
                                                            <RadioButton Grid.Row="2" Grid.Column="2" GroupName="timercolors" Content="Use These Colors:" IsChecked="{Binding CategoryItem.TimerThis}" Checked="TimerThis_Checked" Unchecked="TimerThis_Unchecked"/>
                                                            <TextBlock Grid.Row="2" Grid.Column="3" Text="Font:"/>
                                                            <xctk:ColorPicker Margin="10,0,0,0" Width="100" Grid.Row="2" Grid.Column="4" Name="clrpckrTimerText" SelectedColor="{Binding CategoryItem.TimerFontColor}" SelectedColorChanged="ClrpckrTimerText_SelectedColorChanged"/>
                                                            <TextBlock Margin="10,0,0,0" Grid.Row="2" Grid.Column="5" Text="Timer Bar:"/>
                                                            <xctk:ColorPicker Margin="10,0,0,0" Width="100" Grid.Row="2" Grid.Column="6" Name="clrpckrTimerBar" SelectedColor="{Binding CategoryItem.TimerBarColor}" SelectedColorChanged="ClrpckrTimerBar_SelectedColorChanged"/>
                                                        </Grid>
                                                    </StackPanel>
                                                </GroupBox>
                                                <StackPanel>
                                                    <GroupBox Margin="5,10,0,0" Name="groupOverrides" Header="Character Overrides">
                                                        <StackPanel>
                                                            <Expander Header="{Binding SelectedOverride.ProfileName}" Style="{StaticResource profileexpander}">
                                                                <StackPanel>
                                                                    <Expander Name="expanderText" Header="Text Overrides" Style="{StaticResource overrideexpander}">
                                                                        <StackPanel>
                                                                            <Grid>
                                                                                <Grid.RowDefinitions>
                                                                                    <RowDefinition Height="Auto" />
                                                                                    <RowDefinition Height="Auto"/>
                                                                                    <RowDefinition Height="Auto"/>
                                                                                    <RowDefinition Height="Auto"/>
                                                                                    <RowDefinition Height="Auto"/>
                                                                                    <RowDefinition Height="Auto"/>
                                                                                    <RowDefinition Height="Auto"/>
                                                                                </Grid.RowDefinitions>
                                                                                <Grid.ColumnDefinitions>
                                                                                    <ColumnDefinition Width="75"/>
                                                                                    <ColumnDefinition Width="Auto"/>
                                                                                    <ColumnDefinition Width="Auto"/>
                                                                                    <ColumnDefinition Width="Auto"/>
                                                                                </Grid.ColumnDefinitions>
                                                                                <TextBlock HorizontalAlignment="Right" Grid.Row="0" Grid.Column="0" Margin="10,0,0,0" Text="Overlay"/>
                                                                                <RadioButton  Grid.Row="0" Grid.Column="1" GroupName="textoverlay" Margin="10,0,0,0" Content="Use Category Overlay" IsChecked="{Binding SelectedOverride.TextOverlayCategory}" Checked="OverrideOverlayCategory_Checked" Unchecked="OverrideOverlayCategory_Unchecked"/>
                                                                                <RadioButton  Grid.Row="1" Grid.Column="1" GroupName="textoverlay" VerticalAlignment="Center" Margin="10,0,0,0" Content="Use This Overlay:" IsChecked="{Binding SelectedOverride.TextOverlayThis}" Checked="OverrideTextThis_Checked" Unchecked="OverrideTextThis_Unchecked"/>
                                                                                <ComboBox SelectedValuePath="Name" SelectedValue="{Binding SelectedOverride.TextOverlay}" ItemsSource="{Binding OverlayTexts}" Grid.Row="1" Grid.Column="2" VerticalAlignment="Center" Width="100" Name="comboOverrideTextOverlay" SelectionChanged="ComboOverrideTextOverlay_SelectionChanged">
                                                                                    <ComboBox.ItemTemplate>
                                                                                        <DataTemplate>
                                                                                            <TextBlock Text="{Binding Name}"/>
                                                                                        </DataTemplate>
                                                                                    </ComboBox.ItemTemplate>
                                                                                </ComboBox>
                                                                                <TextBlock Grid.Row="2" Grid.Column="0" Text=""/>
                                                                                <TextBlock HorizontalAlignment="Right" Grid.Row="3" Grid.Column="0" Margin="10,0,0,0" VerticalAlignment="Center" Text="Colors"/>
                                                                                <RadioButton Grid.Row="3" Grid.Column="1" GroupName="overlaytextcolors" Margin="10,0,0,0" Content="Use Category Colors" IsChecked="{Binding SelectedOverride.TextColorCategory}" Checked="OverrideTextColorCategory_Checked" Unchecked="OverrideTextColorCategory_Unchecked"/>
                                                                                <RadioButton Grid.Row="4" Grid.Column="1" GroupName="overlaytextcolors" Margin="10,0,0,0" Content="Use Character Colors" IsChecked="{Binding SelectedOverride.TextColorCharacter}" Checked="OverrideTextColorCharacter_Checked" Unchecked="OverrideTextColorCharacter_Unchecked"/>
                                                                                <RadioButton Grid.Row="5" Grid.Column="1" GroupName="overlaytextcolors" Margin="10,0,0,0" Content="Use These Colors:" IsChecked="{Binding SelectedOverride.TextColorThis}" Checked="OverrideTextColorThis_Checked" Unchecked="OverrideTextColorThis_Unchecked"/>
                                                                                <TextBlock HorizontalAlignment="Right" Grid.Row="5" Grid.Column="2" Margin="0,0,10,0" Text="Font:"/>
                                                                                <xctk:ColorPicker  Width="100" Grid.Row="5" Grid.Column="3" Name="clrpckrTextOverride" SelectedColor="{Binding SelectedOverride.TextColorFont}" SelectedColorChanged="ClrpckrTextOverride_SelectedColorChanged"/>
                                                                            </Grid>
                                                                        </StackPanel>
                                                                    </Expander>
                                                                    <Expander Name="expanderTimer" Header="Timer Overrides" Style="{StaticResource overrideexpander}">
                                                                        <StackPanel>
                                                                            <Grid>
                                                                                <Grid.RowDefinitions>
                                                                                    <RowDefinition Height="Auto" />
                                                                                    <RowDefinition Height="Auto"/>
                                                                                    <RowDefinition Height="Auto"/>
                                                                                    <RowDefinition Height="Auto"/>
                                                                                    <RowDefinition Height="Auto"/>
                                                                                    <RowDefinition Height="Auto"/>
                                                                                </Grid.RowDefinitions>
                                                                                <Grid.ColumnDefinitions>
                                                                                    <ColumnDefinition Width="75"/>
                                                                                    <ColumnDefinition Width="Auto"/>
                                                                                    <ColumnDefinition Width="Auto"/>
                                                                                    <ColumnDefinition Width="Auto"/>
                                                                                    <ColumnDefinition Width="Auto"/>
                                                                                    <ColumnDefinition Width="Auto"/>
                                                                                    <ColumnDefinition Width="Auto"/>
                                                                                </Grid.ColumnDefinitions>
                                                                                <TextBlock HorizontalAlignment="Right" Grid.Row="0" Grid.Column="0" Margin="10,0,0,0" VerticalAlignment="Center" Text="Overlay"/>
                                                                                <RadioButton Grid.Row="0" Grid.Column="1" GroupName="timeroverlay" Margin="10,0,0,0" Content="Use Category Overlay" IsChecked="{Binding SelectedOverride.TimerOverlayCategory}" Checked="OverrideTimerCategory_Checked" Unchecked="OverrideTimerCategory_Unchecked"/>
                                                                                <RadioButton Grid.Row="1" Grid.Column="1" GroupName="timeroverlay" VerticalAlignment="Center" Margin="10,0,0,0" Content="Use This Overlay" IsChecked="{Binding SelectedOverride.TimerOverlayThis}" Checked="OverrideTimerThis_Checked" Unchecked="OverrideTimerThis_Unchecked"/>
                                                                                <ComboBox SelectedValuePath="Name" SelectedValue="{Binding SelectedOverride.TimerOverlay}" ItemsSource="{Binding OverlayTimers}" Grid.Row="1" Grid.Column="2" Margin="0,0,0,0" Width="100" Name="comboTimerOverlayOverride" SelectionChanged="ComboTimerOverlayOverride_SelectionChanged">
                                                                                    <ComboBox.ItemTemplate>
                                                                                        <DataTemplate>
                                                                                            <TextBlock Text="{Binding Name}"/>
                                                                                        </DataTemplate>
                                                                                    </ComboBox.ItemTemplate>
                                                                                </ComboBox>
                                                                                <TextBlock Grid.Row="2" Grid.Column="0" Text=""/>
                                                                                <TextBlock HorizontalAlignment="Right" Grid.Row="3" Grid.Column="0" Margin="10,0,0,0" VerticalAlignment="Center" Text="Colors"/>
                                                                                <RadioButton Grid.Row="3" Grid.Column="1" GroupName="timeroverlaycolors" Margin="10,0,0,0" Content="Use Category Colors" IsChecked="{Binding SelectedOverride.TimerColorCategory}" Checked="OverrideTimerColorCat_Checked" Unchecked="OverrideTimerColorCat_Unchecked"/>
                                                                                <RadioButton Grid.Row="4" Grid.Column="1" GroupName="timeroverlaycolors" Margin="10,0,0,0" Content="Use Character Colors" IsChecked="{Binding SelectedOverride.TimerColorCharacter}" Checked="OverrideTimerColorChar_Checked" Unchecked="OverrideTimerColorChar_Unchecked"/>
                                                                                <RadioButton Grid.Row="5" Grid.Column="1" GroupName="timeroverlaycolors" Margin="10,0,0,0" Content="Use These Colors:" IsChecked="{Binding SelectedOverride.TimerColorThis}" Checked="OverrideTimerColorThis_Checked" Unchecked="OverrideTimerColorThis_Unchecked"/>
                                                                                <TextBlock HorizontalAlignment="Right" Grid.Row="5" Grid.Column="2" Margin="0,0,10,0" Text="Font:"/>
                                                                                <xctk:ColorPicker Grid.Row="5" Grid.Column="3" Width="100" Margin="0,0,0,0" Name="clrpckrTimerFontOverride" SelectedColor="{Binding SelectedOverride.TimerColorFont}" SelectedColorChanged="ClrpckrTimerFontOverride_SelectedColorChanged"/>
                                                                                <TextBlock Grid.Row="5" Grid.Column="4" Margin="10,0,0,0" Text="Timer Bar:"/>
                                                                                <xctk:ColorPicker Grid.Row="5" Grid.Column="5" Width="100" Margin="10,0,0,0" Name="clrpckrTimerBarOverride" SelectedColor="{Binding SelectedOverride.TimerColorBar}" SelectedColorChanged="ClrpckrTimerBarOverride_SelectedColorChanged"/>
                                                                            </Grid>
                                                                        </StackPanel>
                                                                    </Expander>
                                                                </StackPanel>
                                                            </Expander>
                                                        </StackPanel>
                                                    </GroupBox>
                                                </StackPanel>
                                            </StackPanel>
                                        </DataTemplate>
                                    </TabControl.ContentTemplate>
                                </TabControl>
                            </ScrollViewer>
                        </xcad:LayoutDocument>
                    </xcad:LayoutDocumentPane>
                </xcad:LayoutPanel>
            </xcad:LayoutRoot>
        </xcad:DockingManager>
        <Fluent:StatusBar Grid.Row="3" Grid.ColumnSpan="2">
            <Fluent:StatusBarItem Name="statusbarStatus" Title="Staus" Content="{Binding Path=., StringFormat=\{0\}}" HorizontalAlignment="Right"/>
            <Fluent:StatusBarItem Content=" lines of logs processed" HorizontalAlignment="Right"/>
        </Fluent:StatusBar>
    </Grid>
</Window>
